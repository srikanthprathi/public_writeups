Host Header Injection On Password Reset Functionality An Easy #P2
Tameem khalid
Tameem khalid

Sep 27·3 min read








This article is about a vulnerability I was able to find in the BugCrowd private program.
What is Host Header Injection ?
Host Header Injection is an attack in which an attacker can manipulate the Host header and cause the application to behave in unexpected ways. 
Header simply specifies which web site should process the HTTP request. The web server uses the value of this header to dispatch the request to the specified website. 
In short if any malicious user is able to handle this header to their desired domain and if server is not validating it then it leads to host header injection.
Why Host Header Attack Happens?
It is a injection type of attack that is done on the HTTP Headers.
* HTTP Headers are dynamically generated by based on the input of the user. User input can be edited, or spoofed by attackers.It is accessible by everyone.
If website fails to correctly validate or verify the HTTP Host headers.
What is impact of the Bug?
· Web cache Poisoning: Attacker poisons web-cache of the website so anyone who visits the cached page gets infected
· Password Reset Poisoning: Application usually generate a secret token by using host header functionality. To create the password reset link they use domains mentioned in the host header and append it with the password reset token.
Attack Scenario
⦁ The attacker sends a reset password request to another user by modifying the Host Header in the request with any malicious site.
⦁ The user receives an email to reset the password, clicks the link and proceeds further with the malicious link.
⦁ By this way, an attacker can obtain valid password reset token for any user.
when the HOST name is changed from the password reset, there appears a request like this

Request For Password reset and change Host name to Malicious Host
Since we have changed the host to Attacker Host from redacted.com, there we might observe changes in our password reset token URL.
As stated above, the reset password URL changed and the URL looks like as

Malicious Host is Reflected in Url. Now Victim will Click on the link.
The victim will receive the malicious link in their email, and, when clicked, will leak the user’s password reset link / token to the attacker, 
leading to full account takeover.

Attacker gets the password reset token!! Attacker can takeover the account!
Conclusion
Many application developers did not realize that the HTTP host header is accessible and controllable by all users. 
In an application security perspective, the input given by the user is always deceivable, and it is unsafe to trust. 
So, a web developer should consider host header issues as a serious ongoing threat, which must be inspected deeply. 
Moreover, we must implement the required mitigation measures to safeguard ourselves.
